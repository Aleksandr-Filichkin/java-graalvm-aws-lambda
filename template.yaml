AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: AWS Serverless Micronaut API

Resources:
  JavaV1Function:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: lambda-v1/target/lambda-v1-1.0-SNAPSHOT.jar
      Handler: com.filichkin.blog.lambda.v1.handler.BookHandler::handleRequest
      Runtime: java11
      MemorySize: 256
      Tracing: Active
      Policies:
        - DynamoDBCrudPolicy:
            TableName: !Ref BooksTable
      Timeout: 60

      Events:
        GetBook:
          Type: Api
          Properties:
            Path: /v1/book/{book_id}
            Method: get
        CreateBook:
          Type: Api
          Properties:
            Path: /v1/book
            Method: post
        UpdateBook:
          Type: Api
          Properties:
            Path: /v1/book
            Method: put
        DeleteBook:
          Type: Api
          Properties:
            Path: /v1/book/{book_id}
            Method: delete

  JavaV2Function:
    Type: AWS::Serverless::Function
    Properties:

      CodeUri: lambda-v2/target/lambda-v2-1.0-SNAPSHOT.jar
      Handler: com.filichkin.blog.lambda.v2.handler.BookHandler::handleRequest
      Runtime: java11
      MemorySize: 256
      Tracing: Active
      Policies:
        - DynamoDBCrudPolicy:
            TableName: !Ref BooksTable
      Timeout: 60

      Events:
        GetBook:
          Type: Api
          Properties:
            Path: /v2/book/{book_id}
            Method: get
        CreateBook:
          Type: Api
          Properties:
            Path: /v2/book
            Method: post
        UpdateBook:
          Type: Api
          Properties:
            Path: /v2/book
            Method: put
        DeleteBook:
          Type: Api
          Properties:
            Path: /v2/book/{book_id}
            Method: delete

  JavaV3Function:
    Type: AWS::Serverless::Function
    Properties:
      Handler: not.used.in.provided.runtime
      Runtime: provided
      CodeUri: lambda-v3/graalvm/dist/function.zip
      MemorySize: 256
      Tracing: Active
      Policies:
        - DynamoDBCrudPolicy:
            TableName: !Ref BooksTable
      Timeout: 10

      Events:
        GetBook:
          Type: Api
          Properties:
            Path: /v3/book/{book_id}
            Method: get
        CreateBook:
          Type: Api
          Properties:
            Path: /v3/book
            Method: post
        UpdateBook:
          Type: Api
          Properties:
            Path: /v3/book
            Method: put
        DeleteBook:
          Type: Api
          Properties:
            Path: /v3/book/{book_id}
            Method: delete

  GoFunction:
    Type: AWS::Serverless::Function
    Properties:
      Runtime: go1.x
      Handler: lambda-go
      CodeUri: lambda-go
      MemorySize: 256
      Tracing: Active
      Policies:
        - DynamoDBCrudPolicy:
            TableName: !Ref BooksTable
      Timeout: 10

      Events:
        CreateBook:
          Type: Api
          Properties:
            Path: /go/book
            Method: post

  PythonFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: python-lambda/
      Handler: lambda.create
      Runtime: python3.8
      MemorySize: 256
      Tracing: Active
      Policies:
        - DynamoDBCrudPolicy:
            TableName: !Ref BooksTable
      Timeout: 10

      Events:
        CreateBook:
          Type: Api
          Properties:
            Path: /py/book
            Method: post

  NodeFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: node-lambda/
      Handler: lambda.create
      Runtime: nodejs12.x
      MemorySize: 128
      Tracing: Active
      Policies:
        - DynamoDBCrudPolicy:
            TableName: !Ref BooksTable
      Timeout: 10

      Events:
        CreateBook:
          Type: Api
          Properties:
            Path: /node/book
            Method: post


  BooksTable:
    Type: AWS::DynamoDB::Table
    Properties:
      TableName: books
      AttributeDefinitions:
        - AttributeName: id
          AttributeType: S
      KeySchema:
        - AttributeName: id
          KeyType: HASH
      BillingMode: PAY_PER_REQUEST


Outputs:
  MyServiceApi:
    Description: URL for application
    Value: !Sub 'https://${ServerlessRestApi}.execute-api.${AWS::Region}.amazonaws.com/Prod/greet'
    Export:
      Name: MyServiceApi
